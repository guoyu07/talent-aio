<!-- <configuration scan="true" scanPeriod="10 seconds" debug="true"> -->
<configuration scan="true" scanPeriod="10 seconds" debug="true">

	<property resource="logback.properties" />
	
	<contextName>talent-ixxm-service-consumer-site-log-context</contextName>                         <!-- 本项目的名字 -->
	
	
	<!-- console-error config -->
	<appender name="console-error" class="ch.qos.logback.core.ConsoleAppender">
		<encoder charset="UTF-8">
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>error</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter>
	</appender>
	<appender name="console-info" class="ch.qos.logback.core.ConsoleAppender">
		<encoder charset="UTF-8">
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>info</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter>
	</appender>
	
	
	<!-- root file 日志 -->
	<appender name="root-file-error"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/${rootFileName}-error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/${rootFileName}-error.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>ERROR</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="root-file-warn"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/${rootFileName}-warn.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/${rootFileName}-warn.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>warn</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="root-file-info"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/${rootFileName}-info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/${rootFileName}-info.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>INFO</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="root-file-debug"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/${rootFileName}-debug.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/${rootFileName}-debug.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>debug</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<root level="${rootLevel}">
		<appender-ref ref="root-file-error"/>
		<appender-ref ref="root-file-warn"/>
		<appender-ref ref="root-file-info"/>
		<appender-ref ref="root-file-debug"/>
		<appender-ref ref="console-error"/>
	</root>
	
	<!-- app file 日志打印到文件中 -->
	<appender name="app-file-error"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/${appFileName}-error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/${appFileName}-error.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>error</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="app-file-warn"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/${appFileName}-warn.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/${appFileName}-warn.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>warn</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="app-file-info"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/${appFileName}-info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/${appFileName}-info.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>info</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="app-file-debug"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/${appFileName}-debug.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/${appFileName}-debug.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>debug</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter>
	</appender>
	<logger name="${appPackage}" additivity="false">
		<level value="${appLevel}"/>
		<appender-ref ref="app-file-error"/>
		<appender-ref ref="app-file-warn"/>
		<appender-ref ref="app-file-info"/>
		<appender-ref ref="app-file-debug"/>
		<appender-ref ref="console-error"/>
	</logger>
	
	
	<!--  statLog 日志   -->
	<appender name="stat-log-info"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/stat/${statFilename}-info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/stat/${statFilename}-info.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${statPattern}</pattern>
		</encoder>
	</appender>
	<logger name="statLog" additivity="false">
		<level value="${statLevel}"/>
		<appender-ref ref="stat-log-info"/>
	</logger>
	<!-- stat end -->
	
	
	<!-- msglog start -->
	<appender name="msg-log"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/msg/${msgFileName}.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/msg/${msgFileName}.%d{${msgRollingPolicyFileNamePattern}}.log</fileNamePattern>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${msgPattern}</pattern>
		</encoder>
	</appender>
	<logger name="msgLog" additivity="false">
		<level value="${msgLevel}"/>
		<appender-ref ref="msg-log"/>
	</logger>
	<!-- msglog end -->
	
	
	<!--  tcpLog 日志   -->
	<property name="tcpFilename" value="tcp"/>
	<appender name="tcp-log-error"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/tcp/${tcpFilename}-error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/tcp/${tcpFilename}-error.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${simpleConversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>error</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="tcp-log-warn"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/tcp/${tcpFilename}-warn.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/tcp/${tcpFilename}-warn.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${simpleConversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>warn</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="tcp-log-info"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/tcp/${tcpFilename}-info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/tcp/${tcpFilename}-info.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${simpleConversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>info</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="tcp-log-debug"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/tcp/${tcpFilename}-debug.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/tcp/${tcpFilename}-debug.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${simpleConversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>debug</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<logger name="tcpLog" additivity="false">
		<level value="${tcpLevel}"/>
		<appender-ref ref="tcp-log-error"/>
		<appender-ref ref="tcp-log-warn"/>
		<appender-ref ref="tcp-log-info"/>
		<appender-ref ref="tcp-log-debug"/>
		<appender-ref ref="console-error"/>
	</logger>
	
	
	
	<!--  package nioLog 日志   -->
	<property name="nioFilename" value="nio"/>
	<appender name="nio-log-error"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/nio/${nioFilename}-error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/nio/${nioFilename}-error.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>error</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="nio-log-warn"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/nio/${nioFilename}-warn.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/nio/${nioFilename}-warn.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>warn</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="nio-log-info"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/nio/${nioFilename}-info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/nio/${nioFilename}-info.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>info</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="nio-log-debug"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/nio/${nioFilename}-debug.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/nio/${nioFilename}-debug.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>debug</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<logger name="${nioPackage}" additivity="false">
		<level value="${nioLevel}"/>
		<appender-ref ref="nio-log-error"/>
		<appender-ref ref="nio-log-warn"/>
		<appender-ref ref="nio-log-info"/>
		<appender-ref ref="nio-log-debug"/>
		<appender-ref ref="console-error"/>
	</logger>
	
	
	<!--  imclientLog 日志   -->
	<property name="imclientFilename" value="imclient"/>
	<appender name="imclient-log-error"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/imclient/${imclientFilename}-error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/imclient/${imclientFilename}-error.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>error</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="imclient-log-warn"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/imclient/${imclientFilename}-warn.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/imclient/${imclientFilename}-warn.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>warn</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="imclient-log-info"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/imclient/${imclientFilename}-info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/imclient/${imclientFilename}-info.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>info</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="imclient-log-debug"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/imclient/${imclientFilename}-debug.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/imclient/${imclientFilename}-debug.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>debug</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<logger name="${imclientPackage}" additivity="false">
		<level value="${imclientLevel}"/>
		<appender-ref ref="imclient-log-error"/>
		<appender-ref ref="imclient-log-warn"/>
		<appender-ref ref="imclient-log-info"/>
		<appender-ref ref="imclient-log-debug"/>
		<appender-ref ref="console-info"/>
	</logger>
	
	
	
	
	
	
	<!-- 操作日志 -->
	<property name="operFilename" value="oper"/>
	<appender name="oper-log"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/oper/${operFilename}.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${logRootDir}/oper/${operFilename}.%i.log.zip</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>1000</maxIndex>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>${maxFileSize}</maxFileSize>
		</triggeringPolicy>
		<encoder>
			<pattern>%m%n</pattern>
		</encoder>
	</appender>
	<logger name="operLog" additivity="false">
		<level value="debug"/>
		<appender-ref ref="oper-log"/>
	</logger>
	
	
	<!-- JMS日志 -->
	<property name="jmsFilename" value="jms"/>
	<appender name="jms-log"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/jms/${jmsFilename}.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${logRootDir}/jms/${jmsFilename}.%i.log.zip</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>1000</maxIndex>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>${maxFileSize}</maxFileSize>
		</triggeringPolicy>
		<encoder>
			<pattern>${simpleConversionPattern}</pattern>
		</encoder>
	</appender>
	<logger name="jmsLog" additivity="false">
		<level value="debug"/>
		<appender-ref ref="jms-log"/>
	</logger>
	
	
	
	
	
	
	
	
	
	
	<!--  coinLog 日志   -->
	<property name="coinFilename" value="coin"/>
	<appender name="coin-log-error"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/coin/${coinFilename}-error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/coin/${coinFilename}-error.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>error</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="coin-log-warn"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/coin/${coinFilename}-warn.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/coin/${coinFilename}-warn.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>warn</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="coin-log-info"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/coin/${coinFilename}-info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/coin/${coinFilename}-info.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>info</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<appender name="coin-log-debug"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logRootDir}/coin/${coinFilename}-debug.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logRootDir}/coin/${coinFilename}-debug.%d{${rollingPolicyFileNamePattern}}%d{mmss}.%i.log.zip</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>${maxFileSize}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${conversionPattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">   
			<level>debug</level>   
			<onMatch>ACCEPT</onMatch>   
			<onMismatch>DENY</onMismatch>   
		</filter> 
	</appender>
	<logger name="coinLog" additivity="false">
		<level value="${coinLevel}"/>
		<appender-ref ref="coin-log-error"/>
		<appender-ref ref="coin-log-warn"/>
		<appender-ref ref="coin-log-info"/>
		<appender-ref ref="coin-log-debug"/>
		<appender-ref ref="console-error"/>
	</logger>
	
</configuration>